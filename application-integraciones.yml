server:
  port: 8181
  servlet.context-path: /credibanco-usuario
#datasource config
spring:
  datasource:
    url: jdbc:h2:file:~/test;
    driver-class-name: org:h2:Driver
    username: sa
    password: password
#spring:datasource:platform:org:hibernate:dialect:H2Dialect
#spring:datasource:schema:access_control
    maxActive: 10
    maxIdle: 5
    minIdle: 2
    initialSize: 5
    removeAbandoned: true
#jpa config
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    show-sql: true
    generate-ddl: true
    hibernate: ddl-auto:update
    naming:
      physical-strategy: org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
#spring:jpa:properties:hibernate:dialect:org:hibernate:dialect:H2Dialect
    properties:
      jadira:
        usertype:
          autoRegisterUserTypes: true
      hibernate:
        temp:
          use_jdbc_metadata_defaults: false
        format_sql: true
        jdbc: 
          lob:
            non_contextual_creation: true
  jackson:
    serialization:
      fail-on-empty-beans: false
#test
  h2:
    console:
      enabled: true
      path: /h2
jwt:
  secret-key: ${secret:secret}
  validity-in-milliseconds: ${expire-token:3600000}
##############################################
#                                            #
#           OAUTH CONFIGURATION              #
#                                            #
##############################################
security:
  oauth2:
    resource:
      filter-order: 3
  signing-key: MaYzkSjmkzPC57L
  encoding-strength: 256
  security-realm: Spring Boot JWT Example Realm
  jwt:
    client-id: testjwtclientid
    client-secret: XY7kmzoNzl100
    grant-type: password
    scope-read: read
    scope-write: write
    resource-ids: testjwtresourceid
#logging:level:org:springframework:web: TRACE
#logging:level:org:springframework:security: ALL
#logging:level:com:example: DEBUG
#logging:level:file: app:log
eureka:
  instance:
    ip-address: 127.0.0.1
    hostname: localhost
    leaseRenewalIntervalInSeconds: 30
    leaseExpirationDurationInSeconds: 60
    preferIpAddress: false
    #instanceId: ${spring.application.name}:${spring.application.instance_id:${random.value}}
  client:
    registryFetchIntervalSeconds: 30
    eurekaServerReadTimeoutSeconds: 60
    eurekaServerConnectTimeoutSeconds: 60
    region: default
    serviceUrl:
      defaultZone: http://localhost:8082/eureka/
    register-with-eureka: true
    fetch-registry: true