spring.application.name=application-integraciones
#datasource config
spring.datasource.url=jdbc:h2:file:~/test;
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
#spring.datasource.platform=org.hibernate.dialect.H2Dialect
#spring.datasource.schema=access_control
spring.datasource.maxActive=10
spring.datasource.maxIdle=5
spring.datasource.minIdle=2
spring.datasource.initialSize=5
spring.datasource.removeAbandoned=true
#jpa config
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.show-sql=true
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
spring.jpa.properties.jadira.usertype.autoRegisterUserTypes=true
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jackson.serialization.fail-on-empty-beans=false
#test
spring.h2.console.enabled=true
spring.h2.console.path=/h2
jwt.secret-key:${secret:secret}
jwt.validity-in-milliseconds:${expire-token:3600000}
##############################################
#                                            #
#           OAUTH CONFIGURATION              #
#                                            #
##############################################
security.oauth2.resource.filter-order=3
security.signing-key=MaYzkSjmkzPC57L
security.encoding-strength=256
security.security-realm=Spring Boot JWT Example Realm
security.jwt.client-id=testjwtclientid
security.jwt.client-secret=XY7kmzoNzl100
security.jwt.grant-type=password
security.jwt.scope-read=read
security.jwt.scope-write=write
security.jwt.resource-ids=testjwtresourceid
#logging.level.org.springframework.web: TRACE
#logging.level.org.springframework.security: ALL
#logging.level.com.example: DEBUG
#logging.level.file: app.log
eureka.instance.ip-address=127.0.0.1
eureka.instance.hostname=localhost
eureka.instance.leaseRenewalIntervalInSeconds=30
eureka.instance.leaseExpirationDurationInSeconds=60
eureka.instance.preferIpAddress=false
#instanceId: ${spring.application.name}:${spring.application.instance_id:${random.value}}
eureka.client.registryFetchIntervalSeconds=30
eureka.client.eurekaServerReadTimeoutSeconds=60
eureka.client.eurekaServerConnectTimeoutSeconds=60
eureka.client.region=default
eureka.client.serviceUrl.defaultZone=http://localhost:8082/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
